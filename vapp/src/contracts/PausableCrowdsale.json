{
  "contractName": "PausableCrowdsale",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensPurchased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addPauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isPauser",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renouncePauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addPauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPauser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renouncePauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of Crowdsale contract where purchases can be paused and unpaused by the pauser role.\",\"methods\":{\"buyTokens(address)\":{\"details\":\"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.\",\"params\":{\"beneficiary\":\"Recipient of the token purchase\"}},\"pause()\":{\"details\":\"Called by a pauser to pause, triggers stopped state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"rate()\":{\"return\":\"the number of token units a buyer gets per wei.\"},\"token()\":{\"return\":\"the token being sold.\"},\"unpause()\":{\"details\":\"Called by a pauser to unpause, returns to normal state.\"},\"wallet()\":{\"return\":\"the address where funds are collected.\"},\"weiRaised()\":{\"return\":\"the amount of wei raised.\"}},\"title\":\"PausableCrowdsale\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/ernestchng/WebstormProjects/is4302-app/contracts/crowdsale/validation/PausableCrowdsale.sol\":\"PausableCrowdsale\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/ernestchng/WebstormProjects/is4302-app/contracts/GSN/Context.sol\":{\"keccak256\":\"0x068760cbe3b1e635a2a820f7d6969cdb167360b21d36c39ec165c8efb65041c4\",\"urls\":[\"bzz-raw://a8cae4f4b9b8236e1ec22afdfaac2f848b776ad98f7fb9c1823d6d756ddee890\",\"dweb:/ipfs/QmQicBVSv9SvhHwmTNzBG71Gb775o2mfF5CTfSFZvqtgfJ\"]},\"/Users/ernestchng/WebstormProjects/is4302-app/contracts/access/Roles.sol\":{\"keccak256\":\"0x62933c5baec5dec159853f0c2f23d6eee264adf50a0ab9a400b9efb9c478eb1f\",\"urls\":[\"bzz-raw://59374e5ff9a6cafa55948f82ca4d02ead3b5753d7f88a258755b656f05dc413d\",\"dweb:/ipfs/QmPbwZm1nePCN9NDxcaj9o7vJxKv9R6Z6c6LnHC8fdb56G\"]},\"/Users/ernestchng/WebstormProjects/is4302-app/contracts/access/roles/PauserRole.sol\":{\"keccak256\":\"0xd1b5c934bab36d753c22987ad98c7614cb50ebf641371a83c96f8138619d7c30\",\"urls\":[\"bzz-raw://69c4bb822caae3d1bfd38e81f03b6d618d4d83cbb8e9f8236d28e1c4fe1d0d81\",\"dweb:/ipfs/QmWamstbFhdySmocF2TSKYVLLZF24JG4aXMvHiRdWKv3RA\"]},\"/Users/ernestchng/WebstormProjects/is4302-app/contracts/crowdsale/Crowdsale.sol\":{\"keccak256\":\"0xf675d9cf38cab19e6b1134c5db8f8552ea25d4b323c2375f8fef7b967f6478b9\",\"urls\":[\"bzz-raw://0eef8273597c60d91f5887b007cd6168201f31b6af234338e7a669ed0b9f60df\",\"dweb:/ipfs/QmQFBLCLzyPwmEzyLr3aYZPc2iZNCFBhrd6vvb66Bi2z4i\"]},\"/Users/ernestchng/WebstormProjects/is4302-app/contracts/crowdsale/validation/PausableCrowdsale.sol\":{\"keccak256\":\"0x07e554aeb3f9389dea5ea3f9183dde50903425f255fe5a397f3c6555c54611fc\",\"urls\":[\"bzz-raw://e7c7f62aca6936ff86458c565f60bb88581884616cf187587529bde1afa306aa\",\"dweb:/ipfs/QmPedGCqRuyBYCMLjy1KDbFQBC3WedeV9rrhdQLG3vzvZX\"]},\"/Users/ernestchng/WebstormProjects/is4302-app/contracts/lifecycle/Pausable.sol\":{\"keccak256\":\"0xd3e5a49edfb74654d122962cc60b917d1c60461e669a7262fd7aba201fac1260\",\"urls\":[\"bzz-raw://0307a3cae4df037aee16fb0b0d94849cb4d9b20d7d7182c185f3efac6d2caec0\",\"dweb:/ipfs/QmezTANBfrJmCvxfmfyfcfFGtbcUEUtoJCjfxKnAePiNoE\"]},\"/Users/ernestchng/WebstormProjects/is4302-app/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"/Users/ernestchng/WebstormProjects/is4302-app/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"/Users/ernestchng/WebstormProjects/is4302-app/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x34c35213a62dc4083c0706c0132159bc336f5bbae17a04d9905ea2c8c2abf314\",\"urls\":[\"bzz-raw://0fe9ca75a2156ec0bb68f03e79f2dd2b784bb43a83255bce89d72e294a076cdc\",\"dweb:/ipfs/QmP38QGsJTJbYQbmS7nGgEDRBQ98YEfezt8ZuRVDkDCLEH\"]},\"/Users/ernestchng/WebstormProjects/is4302-app/contracts/utils/Address.sol\":{\"keccak256\":\"0x36c48d6afbab50225bac499a65f0285076ab97ef95ff72b978e75f18708edaa9\",\"urls\":[\"bzz-raw://ddd92c5f380c0ae7ada203e9a42994264518f5f1f99d12d0212f0f59a01faa59\",\"dweb:/ipfs/QmTqUZNRvHw86UQHh73qREngtBtW7i74mvjLJPvhGe9f8Y\"]},\"/Users/ernestchng/WebstormProjects/is4302-app/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xb63221b23818d622bfd83d18e0968307e4fcb7a35536bdceded76e1cf8349acd\",\"urls\":[\"bzz-raw://44e1e8c22362c4708a8c3362735f1465f5b05e2f7315e16c7010d694ce019d73\",\"dweb:/ipfs/QmWj9g8X1hxkXRre2kwkEjLBetjuzmSbWHD81bsSojnBkS\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.5.0;\n\nimport \"../Crowdsale.sol\";\nimport \"../../lifecycle/Pausable.sol\";\n\n/**\n * @title PausableCrowdsale\n * @dev Extension of Crowdsale contract where purchases can be paused and unpaused by the pauser role.\n */\ncontract PausableCrowdsale is Crowdsale, Pausable {\n    /**\n     * @dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met.\n     * Use super to concatenate validations.\n     * Adds the validation that the crowdsale must not be paused.\n     * @param _beneficiary Address performing the token purchase\n     * @param _weiAmount Value in wei involved in the purchase\n     */\n    function _preValidatePurchase(address _beneficiary, uint256 _weiAmount) internal view whenNotPaused {\n        return super._preValidatePurchase(_beneficiary, _weiAmount);\n    }\n}\n",
  "sourcePath": "/Users/ernestchng/WebstormProjects/is4302-app/contracts/crowdsale/validation/PausableCrowdsale.sol",
  "ast": {
    "absolutePath": "/Users/ernestchng/WebstormProjects/is4302-app/contracts/crowdsale/validation/PausableCrowdsale.sol",
    "exportedSymbols": {
      "PausableCrowdsale": [
        3372
      ]
    },
    "id": 3373,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3349,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:25"
      },
      {
        "absolutePath": "/Users/ernestchng/WebstormProjects/is4302-app/contracts/crowdsale/Crowdsale.sol",
        "file": "../Crowdsale.sol",
        "id": 3350,
        "nodeType": "ImportDirective",
        "scope": 3373,
        "sourceUnit": 2555,
        "src": "25:26:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ernestchng/WebstormProjects/is4302-app/contracts/lifecycle/Pausable.sol",
        "file": "../../lifecycle/Pausable.sol",
        "id": 3351,
        "nodeType": "ImportDirective",
        "scope": 3373,
        "sourceUnit": 5122,
        "src": "52:38:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3352,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2554,
              "src": "261:9:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$2554",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 3353,
            "nodeType": "InheritanceSpecifier",
            "src": "261:9:25"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3354,
              "name": "Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5121,
              "src": "272:8:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pausable_$5121",
                "typeString": "contract Pausable"
              }
            },
            "id": 3355,
            "nodeType": "InheritanceSpecifier",
            "src": "272:8:25"
          }
        ],
        "contractDependencies": [
          423,
          1950,
          2554,
          5121,
          10482
        ],
        "contractKind": "contract",
        "documentation": "@title PausableCrowdsale\n@dev Extension of Crowdsale contract where purchases can be paused and unpaused by the pauser role.",
        "fullyImplemented": false,
        "id": 3372,
        "linearizedBaseContracts": [
          3372,
          5121,
          1950,
          2554,
          10482,
          423
        ],
        "name": "PausableCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3370,
              "nodeType": "Block",
              "src": "758:76:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3366,
                        "name": "_beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3357,
                        "src": "802:12:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3367,
                        "name": "_weiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3359,
                        "src": "816:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3364,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10716,
                        "src": "775:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_PausableCrowdsale_$3372",
                          "typeString": "contract super PausableCrowdsale"
                        }
                      },
                      "id": 3365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_preValidatePurchase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2485,
                      "src": "775:26:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) view"
                      }
                    },
                    "id": 3368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "775:52:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "functionReturnParameters": 3363,
                  "id": 3369,
                  "nodeType": "Return",
                  "src": "768:59:25"
                }
              ]
            },
            "documentation": "@dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met.\nUse super to concatenate validations.\nAdds the validation that the crowdsale must not be paused.\n@param _beneficiary Address performing the token purchase\n@param _weiAmount Value in wei involved in the purchase",
            "id": 3371,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3362,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3361,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5077,
                  "src": "744:13:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "744:13:25"
              }
            ],
            "name": "_preValidatePurchase",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3357,
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 3371,
                  "src": "688:20:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3356,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "688:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3359,
                  "name": "_weiAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3371,
                  "src": "710:18:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3358,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "710:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "687:42:25"
            },
            "returnParameters": {
              "id": 3363,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "758:0:25"
            },
            "scope": 3372,
            "src": "658:176:25",
            "stateMutability": "view",
            "superFunction": 2485,
            "visibility": "internal"
          }
        ],
        "scope": 3373,
        "src": "231:605:25"
      }
    ],
    "src": "0:837:25"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/ernestchng/WebstormProjects/is4302-app/contracts/crowdsale/validation/PausableCrowdsale.sol",
      "exportedSymbols": {
        "PausableCrowdsale": [
          3372
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".0"
          ]
        },
        "id": 3349,
        "name": "PragmaDirective",
        "src": "0:23:25"
      },
      {
        "attributes": {
          "SourceUnit": 2555,
          "absolutePath": "/Users/ernestchng/WebstormProjects/is4302-app/contracts/crowdsale/Crowdsale.sol",
          "file": "../Crowdsale.sol",
          "scope": 3373,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3350,
        "name": "ImportDirective",
        "src": "25:26:25"
      },
      {
        "attributes": {
          "SourceUnit": 5122,
          "absolutePath": "/Users/ernestchng/WebstormProjects/is4302-app/contracts/lifecycle/Pausable.sol",
          "file": "../../lifecycle/Pausable.sol",
          "scope": 3373,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3351,
        "name": "ImportDirective",
        "src": "52:38:25"
      },
      {
        "attributes": {
          "contractDependencies": [
            423,
            1950,
            2554,
            5121,
            10482
          ],
          "contractKind": "contract",
          "documentation": "@title PausableCrowdsale\n@dev Extension of Crowdsale contract where purchases can be paused and unpaused by the pauser role.",
          "fullyImplemented": false,
          "linearizedBaseContracts": [
            3372,
            5121,
            1950,
            2554,
            10482,
            423
          ],
          "name": "PausableCrowdsale",
          "scope": 3373
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Crowdsale",
                  "referencedDeclaration": 2554,
                  "type": "contract Crowdsale"
                },
                "id": 3352,
                "name": "UserDefinedTypeName",
                "src": "261:9:25"
              }
            ],
            "id": 3353,
            "name": "InheritanceSpecifier",
            "src": "261:9:25"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Pausable",
                  "referencedDeclaration": 5121,
                  "type": "contract Pausable"
                },
                "id": 3354,
                "name": "UserDefinedTypeName",
                "src": "272:8:25"
              }
            ],
            "id": 3355,
            "name": "InheritanceSpecifier",
            "src": "272:8:25"
          },
          {
            "attributes": {
              "documentation": "@dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met.\nUse super to concatenate validations.\nAdds the validation that the crowdsale must not be paused.\n@param _beneficiary Address performing the token purchase\n@param _weiAmount Value in wei involved in the purchase",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "_preValidatePurchase",
              "scope": 3372,
              "stateMutability": "view",
              "superFunction": 2485,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_beneficiary",
                      "scope": 3371,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 3356,
                        "name": "ElementaryTypeName",
                        "src": "688:7:25"
                      }
                    ],
                    "id": 3357,
                    "name": "VariableDeclaration",
                    "src": "688:20:25"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_weiAmount",
                      "scope": 3371,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3358,
                        "name": "ElementaryTypeName",
                        "src": "710:7:25"
                      }
                    ],
                    "id": 3359,
                    "name": "VariableDeclaration",
                    "src": "710:18:25"
                  }
                ],
                "id": 3360,
                "name": "ParameterList",
                "src": "687:42:25"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3363,
                "name": "ParameterList",
                "src": "758:0:25"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 5077,
                      "type": "modifier ()",
                      "value": "whenNotPaused"
                    },
                    "id": 3361,
                    "name": "Identifier",
                    "src": "744:13:25"
                  }
                ],
                "id": 3362,
                "name": "ModifierInvocation",
                "src": "744:13:25"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 3363
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_preValidatePurchase",
                              "referencedDeclaration": 2485,
                              "type": "function (address,uint256) view"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10716,
                                  "type": "contract super PausableCrowdsale",
                                  "value": "super"
                                },
                                "id": 3364,
                                "name": "Identifier",
                                "src": "775:5:25"
                              }
                            ],
                            "id": 3365,
                            "name": "MemberAccess",
                            "src": "775:26:25"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3357,
                              "type": "address",
                              "value": "_beneficiary"
                            },
                            "id": 3366,
                            "name": "Identifier",
                            "src": "802:12:25"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3359,
                              "type": "uint256",
                              "value": "_weiAmount"
                            },
                            "id": 3367,
                            "name": "Identifier",
                            "src": "816:10:25"
                          }
                        ],
                        "id": 3368,
                        "name": "FunctionCall",
                        "src": "775:52:25"
                      }
                    ],
                    "id": 3369,
                    "name": "Return",
                    "src": "768:59:25"
                  }
                ],
                "id": 3370,
                "name": "Block",
                "src": "758:76:25"
              }
            ],
            "id": 3371,
            "name": "FunctionDefinition",
            "src": "658:176:25"
          }
        ],
        "id": 3372,
        "name": "ContractDefinition",
        "src": "231:605:25"
      }
    ],
    "id": 3373,
    "name": "SourceUnit",
    "src": "0:837:25"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-04-01T03:45:24.281Z",
  "devdoc": {
    "details": "Extension of Crowdsale contract where purchases can be paused and unpaused by the pauser role.",
    "methods": {
      "buyTokens(address)": {
        "details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
        "params": {
          "beneficiary": "Recipient of the token purchase"
        }
      },
      "pause()": {
        "details": "Called by a pauser to pause, triggers stopped state."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "rate()": {
        "return": "the number of token units a buyer gets per wei."
      },
      "token()": {
        "return": "the token being sold."
      },
      "unpause()": {
        "details": "Called by a pauser to unpause, returns to normal state."
      },
      "wallet()": {
        "return": "the address where funds are collected."
      },
      "weiRaised()": {
        "return": "the amount of wei raised."
      }
    },
    "title": "PausableCrowdsale"
  },
  "userdoc": {
    "methods": {}
  }
}